% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basic_and_optimized_lu_fn.R
\name{basic_and_optimized_lu_fn}
\alias{basic_and_optimized_lu_fn}
\title{Calculate the p-values of the basic statistics and the nominal p-values of the optimized statistics}
\usage{
basic_and_optimized_lu_fn(g_target, Phi, theta, WWW, y_1, y_2, statistics)
}
\arguments{
\item{g_target}{A numerical matrix of dimension \code{NNN} by \code{MMM}
equal to what is referred to in the manuscript as \code{G}, the genotype matrix.}

\item{Phi}{A numerical matrix of dimension \code{2} by \code{2}.
\code{Phi_{k_1, k_2} = y_{k_1} Psi y_{k_2}}.  
This  matrix is a useful intermediate calculation for getting
\code{V_z}: \code{V_z = kronecker(Phi, W_VG_W)}. 
It is of dimension \code{2} by \code{2} because there are two entities 
\code{y_1} and \code{y_2}.}

\item{theta}{A vector of length \code{2} that is the initial value of the
reparametrization of alpha when I am finding
minimum p-value in the full triangle \code{(alpha_B, alpha_S, alpha_T)}}

\item{WWW}{A diagonal (numerical) matrix of dimension \code{MMM} by \code{MMM}
with the diagonals equal to the \code{weights}.  (The user will specify
\code{weights} in her call to \code{gatars_test_size}.)}

\item{y_1}{A numerical vector of length \code{NNN} equal to what is referred
to in the manuscript as \code{y}, the vector of subjects' coded trait 
phenotypes.}

\item{y_2}{A numerical vector of length \code{NNN} equal to what is referred
to in the manuscript as \code{mu}, the vector of user-specified phenotype
predictions.}

\item{statistics}{A character vector reflecting which optimized statistics you
would like \code{uno_experimento_fn} to compute.}
}
\value{
A list that contains the following objects
\itemize{
\item{\code{basic}: }{
A data frame containing the columns 
\code{B, S, T} (for \code{alpha_B, alpha_S, alpha_T}), \code{q} and \code{p-value}
and a row for each of the basic statistics \code{B}, \code{S}, and \code{T}.
}
\item{\code{optimized}: }{
A data frame containing the same columns as \code{basic} and the additional column
\code{x} and a row for each of the optimized statistics
\code{BS}, \code{BT}, \code{ST}, and \code{BST}.
}
\item{\code{p_value_basic}: }{
A named numerical vector containing the p-values of the three basic statistics.
}
\item{\code{q_basic}: }{
A named numerical vector containing the \code{Q_B}, \code{Q_S}, and \code{Q_T}.
}
\item{\code{q_optimized}: }{
A named numerical vector containing the optimized statistics \code{Q_BS},
\code{Q_BT}, \code{Q_ST}, and \code{Q_BST}.
}
\item{\code{theta}: }{
A vector of length \code{2} containing the value of \code{theta} that optimizing
\code{BST}.
}
\item{\code{x_observed}: }{
A named numerical vector containing the transformed values of the nominal p-values
of the optimized statistics \code{BS}, \code{BT}, \code{ST}, and \code{BST}. It is this
vector that will be compared with the simulated results to determine the true 
p-value.
}
}
}
\description{
For the basic statistics, calculate \code{Q} and its p-value.
For the optimized statistics, calculate the optimizing \code{Q(alpha)}
and its nominal p-value. The statistics \code{BS}, \code{BT},
and \code{ST} require optimizing on one variable so I use 
\code{optimize}.  The statistic \code{BST}, I use the lu
reparametrization given in the function \code{alpha_lu_fn}.
}
\examples{
bim = gatars_example$bim
genotype = gatars_example$genotype
phenotype = gatars_example$phenotype
Psi = gatars_example$Psi
target_markers = gatars_example$target_markers[3:5]
g_target = genotype[, target_markers]
MMM = ncol(g_target)
NNN = nrow(g_target)
e_g_target_1 = colMeans(g_target)
p_target = e_g_target_1/2
e_g_target = matrix(rep(e_g_target_1, nrow(g_target)), nrow = nrow(g_target), byrow = TRUE)
y_1 = yyy = phenotype$y
y_2 = mu = phenotype$mu
Phi = Phi_fn(Psi, y_1, y_2)
www_num = rep(1, MMM)
www = www_num/sum(www_num) * MMM
WWW = diag(www)
zzz_etc = zzz_and_first_two_moments_fn(g_target, Phi, WWW, y_1, y_2)
zzz = zzz_etc$zzz
mu_z = zzz_etc$mu_z
V_z = zzz_etc$V_z
AAA = AAA_fn(1, 0, 0, MMM)
theta_init = rep(pi/3, 2)
statistics = c("BS", "BT", "ST", "BST")
bo = basic_and_optimized_lu_fn(g_target, Phi, theta_init, WWW, y_1, y_2, statistics)
bo$optimized
}
